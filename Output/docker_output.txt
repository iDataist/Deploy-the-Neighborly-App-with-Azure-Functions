(NeighborlyAPI) ➜  NeighborlyAPI git:(main) ✗ zsh docker.zsh
The resource 'appregistry20210411' already exists in location 'westus2' in resource group 'group20210411'. A resource with the same name cannot be created in location 'centralus'. Please select a new resource name.
Login Succeeded
Result
------------------------------
appregistry20210411.azurecr.io
WARNING: You can perform manual login using the provided access token below, for example: 'docker login loginServer -u 00000000-0000-0000-0000-000000000000 -p accessToken'
WARNING! Using --password via the CLI is insecure. Use --password-stdin.
Login Succeeded
Dockerfile already exists. Skipped!
.dockerignore already exists. Skipped!
[+] Building 0.8s (9/9) FINISHED                                                                                                                          
 => [internal] load build definition from Dockerfile                                                                                                 0.2s
 => => transferring dockerfile: 463B                                                                                                                 0.1s
 => [internal] load .dockerignore                                                                                                                    0.1s
 => => transferring context: 143B                                                                                                                    0.1s
 => [internal] load metadata for mcr.microsoft.com/azure-functions/python:3.0-python3.6                                                              0.3s
 => [1/4] FROM mcr.microsoft.com/azure-functions/python:3.0-python3.6@sha256:c5c5ef3d4899110ef734ab8d2bc4dc296f2c5db2ea86861a4bdfea62d8bec055        0.0s
 => [internal] load build context                                                                                                                    0.2s
 => => transferring context: 73.63kB                                                                                                                 0.2s
 => CACHED [2/4] COPY requirements.txt /                                                                                                             0.0s
 => CACHED [3/4] RUN pip install -r /requirements.txt                                                                                                0.0s
 => [4/4] COPY . /home/site/wwwroot                                                                                                                  0.0s
 => exporting to image                                                                                                                               0.1s
 => => exporting layers                                                                                                                              0.0s
 => => writing image sha256:826a3939a796efc01834e9079e5f27014b1bdf61e0f343e16d1911a3aafe2e87                                                         0.0s
 => => naming to docker.io/library/docker20210411                                                                                                    0.0s

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
info: Host.Triggers.Warmup[0]
      Initializing Warmup Extension.
info: Host.Triggers.EventGrid[0]
      registered EventGrid Endpoint = 
info: Host.Startup[503]
      Initializing Host. OperationId: 'be45657b-ebd6-4a3f-83d9-3bd228a6d170'.
info: Host.Startup[504]
      Host initialization: ConsecutiveErrors=0, StartupCount=1, OperationId=be45657b-ebd6-4a3f-83d9-3bd228a6d170
info: Microsoft.Azure.WebJobs.Hosting.OptionsLoggingService[0]
      LoggerFilterOptions
      {
        "MinLevel": "None",
        "Rules": [
          {
            "ProviderName": null,
            "CategoryName": null,
            "LogLevel": null,
            "Filter": "<AddFilter>b__0"
          },
          {
            "ProviderName": "Microsoft.Azure.WebJobs.Script.WebHost.Diagnostics.SystemLoggerProvider",
            "CategoryName": null,
            "LogLevel": "None",
            "Filter": null
          },
          {
            "ProviderName": "Microsoft.Azure.WebJobs.Script.WebHost.Diagnostics.SystemLoggerProvider",
            "CategoryName": null,
            "LogLevel": null,
            "Filter": "<AddFilter>b__0"
          }
        ]
      }
info: Microsoft.Azure.WebJobs.Hosting.OptionsLoggingService[0]
      FunctionResultAggregatorOptions
      {
        "BatchSize": 1000,
        "FlushTimeout": "00:00:30",
        "IsEnabled": true
      }
info: Microsoft.Azure.WebJobs.Hosting.OptionsLoggingService[0]
      SingletonOptions
      {
        "LockPeriod": "00:00:15",
        "ListenerLockPeriod": "00:01:00",
        "LockAcquisitionTimeout": "10675199.02:48:05.4775807",
        "LockAcquisitionPollingInterval": "00:00:05",
        "ListenerLockRecoveryPollingInterval": "00:01:00"
      }
info: Microsoft.Azure.WebJobs.Hosting.OptionsLoggingService[0]
      HttpOptions
      {
        "DynamicThrottlesEnabled": false,
        "MaxConcurrentRequests": -1,
        "MaxOutstandingRequests": -1,
        "RoutePrefix": "api"
      }
info: Microsoft.Azure.WebJobs.Hosting.JobHostService[0]
      Starting JobHost
info: Host.Startup[401]
      Starting Host (HostId=d03ed4b26928-2137340777, InstanceId=41df6257-40a7-41a3-95c3-28835aa5a1ad, Version=3.0.15417.0, ProcessId=1, AppDomainId=1, InDebugMode=False, InDiagnosticMode=False, FunctionsExtensionVersion=(null))
info: Host.Startup[314]
      Loading functions metadata
info: Host.Startup[0]
      Loading proxies metadata
info: Host.Startup[0]
      Initializing Azure Function proxies
info: Host.Startup[0]
      0 proxies loaded
info: Host.Startup[315]
      8 functions loaded
info: Host.Startup[0]
      Generating 8 job function(s)
info: Host.Startup[0]
      Found the following functions:
      Host.Functions.createAdvertisement
      Host.Functions.deleteAdvertisement
      Host.Functions.EventGridTrigger
      Host.Functions.getAdvertisement
      Host.Functions.getAdvertisements
      Host.Functions.getPost
      Host.Functions.getPosts
      Host.Functions.updateAdvertisement
      
info: Microsoft.Azure.WebJobs.Script.WebHost.WebScriptHostHttpRoutesManager[0]
      Initializing function HTTP routes
      Mapped function route 'api/createAdvertisement' [post] to 'createAdvertisement'
      Mapped function route 'api/deleteAdvertisement' [delete] to 'deleteAdvertisement'
      Mapped function route 'api/getAdvertisement' [get] to 'getAdvertisement'
      Mapped function route 'api/getAdvertisements' [get] to 'getAdvertisements'
      Mapped function route 'api/getPost' [get] to 'getPost'
      Mapped function route 'api/getPosts' [get] to 'getPosts'
      Mapped function route 'api/updateAdvertisement' [put] to 'updateAdvertisement'
      
info: Host.Startup[412]
      Host initialized (423ms)
info: Host.Startup[413]
      Host started (437ms)
info: Host.Startup[0]
      Job host started
Hosting environment: Production
Content root path: /
Now listening on: http://[::]:80
Application started. Press Ctrl+C to shut down.
info: Microsoft.Azure.WebJobs.Script.Workers.Rpc.RpcFunctionInvocationDispatcher[0]
      Worker process started and initialized.
info: Host.General[316]
      Host lock lease acquired by instance ID '000000000000000000000000807B841E'.
REPOSITORY                                      TAG       IMAGE ID       CREATED         SIZE
appregistry20210411.azurecr.io/docker20210411   v1        826a3939a796   6 minutes ago   1GB
docker20210411                                  latest    826a3939a796   6 minutes ago   1GB
The push refers to repository [appregistry20210411.azurecr.io/docker20210411]
2ad5a0199eb0: Pushed 
bc9bb80a3e73: Pushed 
19cc063635e0: Layer already exists 
6e87b2cfc789: Pushed 
98bc1a2a7a29: Pushed 
c5190cdc24c4: Pushed 
538e091fdf93: Pushed 
c40e17c62c7b: Pushed 
04f5e3454f3f: Pushed 
950feae30948: Pushed 
8711af342595: Pushed 
9eb82f04c782: Pushed 
v1: digest: sha256:2b32644839ef34318ad31824ab92b75196668a3c527e0b177efa58f45783e935 size: 2847
The login server endpoint suffix '.azurecr.io' is automatically omitted.
Result
--------------
docker20210411
{- Finished ..
  "aadProfile": null,
  "addonProfiles": {
    "KubeDashboard": {
      "config": null,
      "enabled": false,
      "identity": null
    }
  },
  "agentPoolProfiles": [
    {
      "availabilityZones": null,
      "count": 2,
      "enableAutoScaling": null,
      "enableEncryptionAtHost": null,
      "enableNodePublicIp": false,
      "kubeletConfig": null,
      "kubeletDiskType": "OS",
      "linuxOsConfig": null,
      "maxCount": null,
      "maxPods": 110,
      "minCount": null,
      "mode": "System",
      "name": "nodepool1",
      "nodeImageVersion": "AKSUbuntu-1804gen2-2021.03.29",
      "nodeLabels": {},
      "nodePublicIpPrefixId": null,
      "nodeTaints": null,
      "orchestratorVersion": "1.18.14",
      "osDiskSizeGb": 128,
      "osDiskType": "Managed",
      "osType": "Linux",
      "podSubnetId": null,
      "powerState": {
        "code": "Running"
      },
      "provisioningState": "Succeeded",
      "proximityPlacementGroupId": null,
      "scaleSetEvictionPolicy": null,
      "scaleSetPriority": null,
      "spotMaxPrice": null,
      "tags": null,
      "type": "VirtualMachineScaleSets",
      "upgradeSettings": null,
      "vmSize": "Standard_DS2_v2",
      "vnetSubnetId": null
    }
  ],
  "apiServerAccessProfile": null,
  "autoScalerProfile": null,
  "autoUpgradeProfile": null,
  "azurePortalFqdn": "kuberclust-group20210411-5bb35c-0bf1a31a.portal.hcp.centralus.azmk8s.io",
  "diskEncryptionSetId": null,
  "dnsPrefix": "kuberclust-group20210411-5bb35c",
  "enablePodSecurityPolicy": null,
  "enableRbac": true,
  "fqdn": "kuberclust-group20210411-5bb35c-0bf1a31a.hcp.centralus.azmk8s.io",
  "fqdnSubdomain": null,
  "id": "/subscriptions/5bb35c36-233e-4b7e-afd9-a2b795899fb9/resourcegroups/group20210411/providers/Microsoft.ContainerService/managedClusters/kubercluster20210411",
  "identity": {
    "principalId": "6b80c5c8-ace1-4127-bd68-fd691ea1e2a8",
    "tenantId": "10e19cba-5b4d-42f0-a5b1-0e066efe7fe1",
    "type": "SystemAssigned",
    "userAssignedIdentities": null
  },
  "identityProfile": {
    "kubeletidentity": {
      "clientId": "153d79c7-2740-4cc4-b5d3-0b76ae8d53e2",
      "objectId": "af62d974-202f-4854-b2d1-a43fd0022932",
      "resourceId": "/subscriptions/5bb35c36-233e-4b7e-afd9-a2b795899fb9/resourcegroups/MC_group20210411_kubercluster20210411_centralus/providers/Microsoft.ManagedIdentity/userAssignedIdentities/kubercluster20210411-agentpool"
    }
  },
  "kubernetesVersion": "1.18.14",
  "linuxProfile": {
    "adminUsername": "azureuser",
    "ssh": {
      "publicKeys": [
        {
          "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCnxior6cZYibgI0zKlvXgllZKih4oJtDi316jQWLaY+0DeKWEERDFQ0Bdexni/4iN8orzesHJLqA7Op4m7sfAUJ5mLeJOPYDjSQATcBK0yEgHKqyEIfZVs/b0dz2WY852vAVlVvmdxrPtojOASpdn9q+nlyg4tVEPx2Rtfouj0bDC+ybsSx7b12foM+hDMDnVOu2Epv848E4tBTr5sak/anV1stJpFKkqwsObOWza1NsYMVGparHxE8A0vw72zRH0l7SL1MWpVMnSq/eG/kSqQQ3Q2eIRNnx2ZKyivaiLHxgMBQB9WQ8yyjZ9LB18Nr0KFFa92YkJG+cTHQGrmzHDV"
        }
      ]
    }
  },
  "location": "centralus",
  "maxAgentPools": 10,
  "name": "kubercluster20210411",
  "networkProfile": {
    "dnsServiceIp": "10.0.0.10",
    "dockerBridgeCidr": "172.17.0.1/16",
    "loadBalancerProfile": {
      "allocatedOutboundPorts": null,
      "effectiveOutboundIps": [
        {
          "id": "/subscriptions/5bb35c36-233e-4b7e-afd9-a2b795899fb9/resourceGroups/MC_group20210411_kubercluster20210411_centralus/providers/Microsoft.Network/publicIPAddresses/c0a76107-ec2d-41d6-ad87-f3ad9ea38ff9",
          "resourceGroup": "MC_group20210411_kubercluster20210411_centralus"
        }
      ],
      "idleTimeoutInMinutes": null,
      "managedOutboundIps": {
        "count": 1
      },
      "outboundIpPrefixes": null,
      "outboundIps": null
    },
    "loadBalancerSku": "Standard",
    "networkMode": null,
    "networkPlugin": "kubenet",
    "networkPolicy": null,
    "outboundType": "loadBalancer",
    "podCidr": "10.244.0.0/16",
    "serviceCidr": "10.0.0.0/16"
  },
  "nodeResourceGroup": "MC_group20210411_kubercluster20210411_centralus",
  "podIdentityProfile": null,
  "powerState": {
    "code": "Running"
  },
  "privateFqdn": null,
  "provisioningState": "Succeeded",
  "resourceGroup": "group20210411",
  "servicePrincipalProfile": {
    "clientId": "msi",
    "secret": null
  },
  "sku": {
    "name": "Basic",
    "tier": "Free"
  },
  "tags": null,
  "type": "Microsoft.ContainerService/ManagedClusters",
  "windowsProfile": null
}
A different object named kubercluster20210411 already exists in your kubeconfig file.
Overwrite? (y/n): y
A different object named clusterUser_group20210411_kubercluster20210411 already exists in your kubeconfig file.
Overwrite? (y/n): y
Merged "kubercluster20210411" as current context in /Users/huiren/.kube/config
NAME                                STATUS   ROLES   AGE     VERSION
aks-nodepool1-18855717-vmss000000   Ready    agent   2m19s   v1.18.14
aks-nodepool1-18855717-vmss000001   Ready    agent   2m16s   v1.18.14
namespace/keda created
Installing KEDA v2 in namespace keda
customresourcedefinition.apiextensions.k8s.io/clustertriggerauthentications.keda.sh created
customresourcedefinition.apiextensions.k8s.io/scaledjobs.keda.sh created
customresourcedefinition.apiextensions.k8s.io/scaledobjects.keda.sh created
customresourcedefinition.apiextensions.k8s.io/triggerauthentications.keda.sh created
serviceaccount/keda-operator created
clusterrole.rbac.authorization.k8s.io/keda-external-metrics-reader created
clusterrole.rbac.authorization.k8s.io/keda-operator created
rolebinding.rbac.authorization.k8s.io/keda-auth-reader created
clusterrolebinding.rbac.authorization.k8s.io/keda-hpa-controller-external-metrics created
clusterrolebinding.rbac.authorization.k8s.io/keda-operator created
clusterrolebinding.rbac.authorization.k8s.io/keda:system:auth-delegator created
service/keda-metrics-apiserver created
deployment.apps/keda-metrics-apiserver created
deployment.apps/keda-operator created
apiservice.apiregistration.k8s.io/v1beta1.external.metrics.k8s.io created
KEDA v2 is installed in namespace keda
secret/kubercluster20210411 created
secret/func-keys-kube-secret-kubercluster20210411 created
serviceaccount/kubercluster20210411-function-keys-identity-svc-act created
role.rbac.authorization.k8s.io/functions-keys-manager-role created
rolebinding.rbac.authorization.k8s.io/kubercluster20210411-function-keys-identity-svc-act-functions-keys-manager-rolebinding created
service/kubercluster20210411-http created
deployment.apps/kubercluster20210411-http created
deployment.apps/kubercluster20210411 created
scaledobject.keda.sh/kubercluster20210411 created
Waiting for deployment "kubercluster20210411-http" rollout to finish: 0 of 1 updated replicas are available...
Process didn't exit within specified timeout
secret/kubercluster20210411 unchanged
secret/func-keys-kube-secret-kubercluster20210411 configured
serviceaccount/kubercluster20210411-function-keys-identity-svc-act unchanged
role.rbac.authorization.k8s.io/functions-keys-manager-role unchanged
rolebinding.rbac.authorization.k8s.io/kubercluster20210411-function-keys-identity-svc-act-functions-keys-manager-rolebinding unchanged
service/kubercluster20210411-http unchanged
deployment.apps/kubercluster20210411-http unchanged
deployment.apps/kubercluster20210411 unchanged
scaledobject.keda.sh/kubercluster20210411 unchanged
CURRENT   NAME                   CLUSTER                AUTHINFO                                         NAMESPACE
          appregistry20210405    appregistry20210405    clusterUser_group20210405_appregistry20210405    
          kubercluster20210405   kubercluster20210405   clusterUser_group20210405_kubercluster20210405   
*         kubercluster20210411   kubercluster20210411   clusterUser_group20210411_kubercluster20210411   
NAME                        TYPE           CLUSTER-IP    EXTERNAL-IP     PORT(S)        AGE
kubercluster20210411-http   LoadBalancer   10.0.73.136   20.40.240.173   80:30115/TCP   4m3s
kubernetes                  ClusterIP      10.0.0.1      <none>          443/TCP        8m7s     